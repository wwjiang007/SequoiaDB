import os

Import("env")

gtestFiles = [
      "../../../../../SequoiaDB/engine/gtest/src/gtest-all.cc"
      ]

gtestMainFile = [
      "../../../../../SequoiaDB/engine/gtest/src/gtest_main.cc"
      ]

testFiles1 = [
        "../../testcommon.c",
        "collection.cpp"
      ]
testFiles2 = [
        "../../testcommon.c",
        "collectionspace.cpp"
      ]
testFiles3 = [
        "../../testcommon.c",
        "cursor.cpp"
      ]
testFiles4 = [
        "../../testcommon.c",
        "sdb.cpp"
      ]
testFiles5 = [
        "../../testcommon.c",
        "snapshot.cpp"
      ]
testFiles6 = [
        "../../testcommon.c",
        "concurrent_insert.cpp"
      ]
testFiles7 = [
        "../../testcommon.c",
        "shard.cpp"
      ]
testFiles8 = [
        "../../testcommon.c",
        "debug.cpp"
      ]
testFiles9 = [
        "../../testcommon.c",
        "cbson.cpp"
      ]
testFiles10 = [
        "../../testcommon.c",
        "domain.cpp"
      ]
testFiles11 = [
        "../../testcommon.c",
        "lob.cpp"
      ]
testFiles12 = [
        "../../testcommon.c",
        "selector_query.cpp"
      ]
testFiles13 = [
        "../../testcommon.c",
        "rg.cpp"
      ]

testFiles14 = [
        "../../testcommon.c",
        "mutex.cpp"
      ]

testFiles15 = [
        "../../testcommon.c",
        "dc.cpp"
      ]

testFiles16 = [
        "../../testcommon.c",
        "bson_test.cpp"
      ]

#Google Test
gtestall = env.StaticLibrary('gtest', gtestFiles)
gtestMainObj = env.Object('gtestMainObj', gtestMainFile)

collection = env.Program("collection", [testFiles1, gtestMainObj],
                     _LIBDEPS='$_LIBDEPS_OBJS')
collectionspace = env.Program("collectionspace", [testFiles2, gtestMainObj])
#                     _LIBDEPS='$_LIBDEPS_OBJS')
cursor = env.Program("cursor", [testFiles3, gtestMainObj])
#                     _LIBDEPS='$_LIBDEPS_OBJS')
sdb = env.Program("sdb", [testFiles4, gtestMainObj])
#                     _LIBDEPS='$_LIBDEPS_OBJS')
snapshot = env.Program("snapshot", [testFiles5, gtestMainObj])
#                     _LIBDEPS='$_LIBDEPS_OBJS')
concurrent = env.Program("concurrent", [testFiles6, gtestMainObj])
#                     _LIBDEPS='$_LIBDEPS_OBJS')
shard = env.Program("shard", [testFiles7, gtestMainObj])
#                     _LIBDEPS='$_LIBDEPS_OBJS')
debug = env.Program("debug", [testFiles8, gtestMainObj])
cbson = env.Program("cbson", [testFiles9, gtestMainObj])
domain = env.Program("domain", [testFiles10, gtestMainObj])
lob = env.Program("lob", [testFiles11, gtestMainObj])
selector = env.Program("selector", [testFiles12, gtestMainObj])
rg = env.Program("rg", [testFiles13, gtestMainObj])
mutex = env.Program("mutex", [testFiles14, gtestMainObj])
dc = env.Program("dc", [testFiles15, gtestMainObj])
bson_test = env.Program("bson_test", [testFiles16, gtestMainObj])

#env.Install( '#/build_test', [collection,collectionspace,cursor,sdb,snapshot,concurrent,
#                              shard, debug, cbson, domain, lob, selector, mutex, rg, dc] )
                              
env.Install( '#/build_test', [collection,collectionspace,cursor,sdb,snapshot,concurrent,
                              shard, debug, cbson, domain, lob, selector, bson_test] )
