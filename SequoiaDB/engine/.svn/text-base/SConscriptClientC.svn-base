import os

Import("clientCEnv")
Import("linux")
Import("aix")
Import("windows")
Import("ssllib_file")
Import("ssllib_file1")
Import("mergeStaticLibrary")

clientCFiles = [
      "client/client.c"
      ]

clientCLibFiles = [
      clientCFiles,
      "oss/ossSSLCertificate.c",
      "oss/ossSSLWrapper.c",
      "oss/ossSSLContext.c",
      "oss/oss.c",
      "oss/ossUtil.c",
      "oss/ossMem.c",
      "client/common.c",
      "client/network.c",
      "client/bson/numbers.c",
      "client/bson/bson.c",
      "client/bson/encoding.c",
      "client/base64c.c",
      "client/cJSON.c",
      "client/jstobs.c",
      "client/timestampParse.c",
      "client/timestampTm.c",
      "client/timestampValid.c",
      "bson/md5.c"
      ]

#Shared Library
if aix:
    clientCLib = clientCEnv.SharedLibrary('sdbc', [clientCLibFiles, ssllib_file1, ssllib_file])
    clientCEnv.Install( '#/client/lib', clientCLib )
else:
    clientCLib = clientCEnv.SharedLibrary('sdbc', clientCLibFiles)
    clientCEnv.Install( '#/client/lib', clientCLib )

#Static Library
dir = ''
def merge(target, source = None, env = clientCEnv):
    pureLib = dir + '/libstaticpuresdbc.a'
    clientCLibStatic = dir + '/libstaticsdbc.a'
    mergeStaticLibrary(clientCLibStatic, aix, ssllib_file, ssllib_file1, pureLib)
    clientCEnv.Install( '#/client/lib/', clientCLibStatic )

if linux or aix:
   staticPureSdbCLib = clientCEnv.StaticLibrary('staticpuresdbc', clientCLibFiles)
   dir = os.path.dirname(staticPureSdbCLib[0].get_abspath())
   clientCEnv.AddPostAction(staticPureSdbCLib, Action(merge))
elif windows:
   clientCLibStatic = clientCEnv.StaticLibrary('staticsdbc', [clientCLibFiles, ssllib_file, ssllib_file1])
   clientCEnv.Install( '#/client/lib/', clientCLibStatic )

#Header files
clientCEnv.Install( '#/client/include', "client/client.h" )
clientCEnv.Install( '#/client/include', "client/jstobs.h" )
clientCEnv.Install( '#/client/include', "client/base64c.h" )
clientCEnv.Install( '#/client/include/bson/', "client/bson/bson.h" )
clientCEnv.Install( '#/client/include/bson/', "client/bson/encoding.h" )
clientCEnv.Install( '#/client/include/', "include/core.h" )
clientCEnv.Install( '#/client/include/', "include/ossErr.h" )
clientCEnv.Install( '#/client/include/', "include/ossFeat.h" )
clientCEnv.Install( '#/client/include/', "include/ossTypes.h" )
clientCEnv.Install( '#/client/include/', "include/spd.h" )
